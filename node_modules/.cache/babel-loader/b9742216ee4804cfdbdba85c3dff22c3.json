{"ast":null,"code":"import produce from 'immer';\nimport { GET_PROJECT_TYPE_LIST, GET_PROJECT_TYPE, DELETE_PROJECT_TYPE, CREATE_PROJECT_TYPE, EDIT_PROJECT_TYPE, MOVE_TO_NEXT_PAGE, MOVE_TO_PREVIOUS_PAGE, LIMIT_PROJECT_TYPE } from './ProjectType.constants';\nimport { totalPage } from '../../utils/totalPage';\nimport { deleteApi } from '../../utils/api';\nconst intialState = {\n  length: 0,\n  data: [],\n  totalPage: 1\n};\nexport const projectTypeReducer = (state = intialState, action) => {\n  return produce(state, draftState => {\n    switch (action.type) {\n      case GET_PROJECT_TYPE_LIST:\n        draftState.data = action.payload;\n        draftState.length = action.payload.length;\n        draftState.totalPage = totalPage(draftState.length, LIMIT_PROJECT_TYPE);\n        break;\n\n      case GET_PROJECT_TYPE:\n        break;\n\n      case CREATE_PROJECT_TYPE:\n        draftState.length++;\n        draftState.totalPage = totalPage(draftState.data, LIMIT_PROJECT_TYPE);\n        break;\n\n      case DELETE_PROJECT_TYPE:\n        draftState.length--;\n        draftState.totalPage = totalPage(draftState.length, LIMIT_PROJECT_TYPE);\n        break;\n\n      case EDIT_PROJECT_TYPE:\n        break;\n\n      case MOVE_TO_NEXT_PAGE:\n        draftState.page = draftState.page >= draftState.totalPage ? draftState.page : ++draftState.page;\n        break;\n\n      case MOVE_TO_PREVIOUS_PAGE:\n        draftState.page = draftState.page <= 1 ? draftState.page : --draftState.page;\n        break;\n\n      default:\n        return state;\n    }\n  });\n};","map":{"version":3,"sources":["/home/dumdum1100/react_tutor/demo_project/client/src/modules/ProjectType/ProjectType.reducer.js"],"names":["produce","GET_PROJECT_TYPE_LIST","GET_PROJECT_TYPE","DELETE_PROJECT_TYPE","CREATE_PROJECT_TYPE","EDIT_PROJECT_TYPE","MOVE_TO_NEXT_PAGE","MOVE_TO_PREVIOUS_PAGE","LIMIT_PROJECT_TYPE","totalPage","deleteApi","intialState","length","data","projectTypeReducer","state","action","draftState","type","payload","page"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SACEC,qBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,iBALF,EAMEC,iBANF,EAOEC,qBAPF,EAQEC,kBARF,QASO,yBATP;AAWA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,CADU;AAElBC,EAAAA,IAAI,EAAE,EAFY;AAGlBJ,EAAAA,SAAS,EAAE;AAHO,CAApB;AAMA,OAAO,MAAMK,kBAAkB,GAAG,CAACC,KAAK,GAAGJ,WAAT,EAAsBK,MAAtB,KAAgC;AAChE,SAAOhB,OAAO,CAACe,KAAD,EAAQE,UAAU,IAAG;AACjC,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKjB,qBAAL;AACEgB,QAAAA,UAAU,CAACJ,IAAX,GAAkBG,MAAM,CAACG,OAAzB;AACAF,QAAAA,UAAU,CAACL,MAAX,GAAoBI,MAAM,CAACG,OAAP,CAAeP,MAAnC;AACAK,QAAAA,UAAU,CAACR,SAAX,GAAuBA,SAAS,CAACQ,UAAU,CAACL,MAAZ,EAAoBJ,kBAApB,CAAhC;AACA;;AAEF,WAAKN,gBAAL;AACE;;AAEF,WAAKE,mBAAL;AACEa,QAAAA,UAAU,CAACL,MAAX;AACAK,QAAAA,UAAU,CAACR,SAAX,GAAuBA,SAAS,CAACQ,UAAU,CAACJ,IAAZ,EAAkBL,kBAAlB,CAAhC;AACA;;AAEF,WAAKL,mBAAL;AACEc,QAAAA,UAAU,CAACL,MAAX;AACAK,QAAAA,UAAU,CAACR,SAAX,GAAuBA,SAAS,CAACQ,UAAU,CAACL,MAAZ,EAAoBJ,kBAApB,CAAhC;AACA;;AAEF,WAAKH,iBAAL;AACE;;AAEF,WAAKC,iBAAL;AACEW,QAAAA,UAAU,CAACG,IAAX,GAAkBH,UAAU,CAACG,IAAX,IAAmBH,UAAU,CAACR,SAA9B,GAA0CQ,UAAU,CAACG,IAArD,GAA4D,EAAEH,UAAU,CAACG,IAA3F;AACA;;AACF,WAAKb,qBAAL;AACEU,QAAAA,UAAU,CAACG,IAAX,GAAkBH,UAAU,CAACG,IAAX,IAAmB,CAAnB,GAAuBH,UAAU,CAACG,IAAlC,GAAyC,EAAEH,UAAU,CAACG,IAAxE;AACA;;AAEF;AACE,eAAOL,KAAP;AA/BJ;AAmCD,GApCa,CAAd;AAqCD,CAtCM","sourcesContent":["import produce from 'immer';\nimport {\n  GET_PROJECT_TYPE_LIST,\n  GET_PROJECT_TYPE,\n  DELETE_PROJECT_TYPE,\n  CREATE_PROJECT_TYPE,\n  EDIT_PROJECT_TYPE,\n  MOVE_TO_NEXT_PAGE,\n  MOVE_TO_PREVIOUS_PAGE,\n  LIMIT_PROJECT_TYPE,\n} from './ProjectType.constants';\n\nimport {totalPage} from '../../utils/totalPage'\nimport { deleteApi } from '../../utils/api';\n\nconst intialState = {\n  length: 0,\n  data: [],\n  totalPage: 1,\n};\n\nexport const projectTypeReducer = (state = intialState, action) =>{\n  return produce(state, draftState =>{\n    switch (action.type){\n      case GET_PROJECT_TYPE_LIST:\n        draftState.data = action.payload;\n        draftState.length = action.payload.length;\n        draftState.totalPage = totalPage(draftState.length, LIMIT_PROJECT_TYPE);\n        break;\n\n      case GET_PROJECT_TYPE:\n        break;\n      \n      case CREATE_PROJECT_TYPE:\n        draftState.length++;        \n        draftState.totalPage = totalPage(draftState.data, LIMIT_PROJECT_TYPE);\n        break;\n\n      case DELETE_PROJECT_TYPE:\n        draftState.length--;\n        draftState.totalPage = totalPage(draftState.length, LIMIT_PROJECT_TYPE);\n        break;\n      \n      case EDIT_PROJECT_TYPE:\n        break;\n      \n      case MOVE_TO_NEXT_PAGE:\n        draftState.page = draftState.page >= draftState.totalPage ? draftState.page : ++draftState.page;\n        break;\n      case MOVE_TO_PREVIOUS_PAGE:\n        draftState.page = draftState.page <= 1 ? draftState.page : --draftState.page;\n        break;\n      \n      default:\n        return state;\n      \n    }\n      \n  })\n}\n"]},"metadata":{},"sourceType":"module"}