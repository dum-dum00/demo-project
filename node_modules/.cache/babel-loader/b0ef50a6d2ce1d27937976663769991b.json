{"ast":null,"code":"var _jsxFileName = \"/home/dumdum1100/react_tutor/demo_project/client/src/modules/ProjectType/components/ProjectType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getList } from '../../../services';\nimport { getProjectTypeListService } from '../ProjectType.services';\nimport { LIST_NAME, LIMIT_PROJECT_TYPE } from '../ProjectType.constants';\nimport { moveToNextPage, moveToPreviousPage } from '../actions';\nimport { Pagination } from '../../../components/Pagination';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { PATH_PROJECT_TYPE } from '../../../constants/path';\nimport CreateProjectType from './CreateProjectType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectType = () => {\n  _s();\n\n  const projectTypeList = useSelector(state => state.projectTypes.data);\n  const {\n    length,\n    totalPage\n  } = useSelector(state => state.projectTypes);\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const page = JSON.parse(new URLSearchParams(location.search).get(\"page\")) || 1;\n  useEffect(() => {\n    const data = getList(LIST_NAME);\n    dispatch(getProjectTypeListService(data));\n  }, [dispatch, length]);\n\n  const splitList = () => {\n    return projectTypeList.slice(LIMIT_PROJECT_TYPE * (page - 1), LIMIT_PROJECT_TYPE * page);\n  };\n\n  const onClick = item => {\n    history.push(`${PATH_PROJECT_TYPE}/${item.id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex  rounded-xl items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-center\\tmy-2 flex-1 flex flex-col rounded-xl w-3/4 \",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border-collapse text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-blue-500\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \" text-white text-xl\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-blue-500 \",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-blue-500 \",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-blue-500 \",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-blue-500 \",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: splitList().map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"hover:bg-gray-200\",\n            onClick: () => onClick(item),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-blue-500\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-blue-500\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-blue-500\",\n              children: item.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-blue-500\",\n              children: item.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        next: () => {\n          history.push(`${PATH_PROJECT_TYPE}?page=${page + 1}`);\n        },\n        previous: () => {\n          history.push(`${PATH_PROJECT_TYPE}?page=${page - 1}`);\n        },\n        page: page,\n        totalPage: totalPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 h-full bg-blue-800 opacity-75 p-5 px-8 rounded-xl\",\n      children: /*#__PURE__*/_jsxDEV(CreateProjectType, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectType, \"9++RNIxSTJ0mLoF9pr5bB+l0WR4=\", false, function () {\n  return [useSelector, useSelector, useLocation, useHistory, useDispatch];\n});\n\n_c = ProjectType;\nexport default ProjectType;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectType\");","map":{"version":3,"sources":["/home/dumdum1100/react_tutor/demo_project/client/src/modules/ProjectType/components/ProjectType.js"],"names":["React","useEffect","useSelector","useDispatch","getList","getProjectTypeListService","LIST_NAME","LIMIT_PROJECT_TYPE","moveToNextPage","moveToPreviousPage","Pagination","useHistory","useLocation","PATH_PROJECT_TYPE","CreateProjectType","ProjectType","projectTypeList","state","projectTypes","data","length","totalPage","location","history","dispatch","page","JSON","parse","URLSearchParams","search","get","splitList","slice","onClick","item","push","id","map","index","name","description","priority","status"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getList } from '../../../services';\nimport { getProjectTypeListService } from '../ProjectType.services';\nimport { LIST_NAME, LIMIT_PROJECT_TYPE } from '../ProjectType.constants';\nimport { moveToNextPage, moveToPreviousPage } from '../actions';\nimport { Pagination } from '../../../components/Pagination';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { PATH_PROJECT_TYPE} from '../../../constants/path'\n\n\nimport CreateProjectType from './CreateProjectType';\n\nexport const ProjectType = () => {\n  const projectTypeList = useSelector(state => state.projectTypes.data);\n  const { length , totalPage } = useSelector(state => state.projectTypes);\n\n  const location = useLocation()\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const page = JSON.parse(new URLSearchParams(location.search).get(\"page\")) || 1;\n\n\n  useEffect(() => {\n    const data = getList(LIST_NAME);\n    dispatch(getProjectTypeListService(data));\n  }, [dispatch, length]);\n\n\n  const splitList = () => {\n    return projectTypeList.slice(LIMIT_PROJECT_TYPE * (page - 1), LIMIT_PROJECT_TYPE * page);\n  };\n\n\n  const onClick = item => {\n    history.push(`${PATH_PROJECT_TYPE}/${item.id}`)\n  };\n\n  return (\n    <div className='h-full flex  rounded-xl items-center'>\n      <div className='p-4 text-center\tmy-2 flex-1 flex flex-col rounded-xl w-3/4 '>\n        <table className='w-full border-collapse text-lg'>\n          <thead className='bg-blue-500'>\n            <tr className=' text-white text-xl'>\n              <th className='border border-blue-500 '>Name</th>\n              <th className='border border-blue-500 '>Description</th>\n              <th className='border border-blue-500 '>Priority</th>\n              <th className='border border-blue-500 '>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {splitList().map((item, index) => (\n              <tr key={index} \n              className='hover:bg-gray-200'\n              onClick={()=>onClick(item)}>\n                  <td className='border border-blue-500'>{item.name}</td>\n                  <td className='border border-blue-500'>{item.description}</td>\n                  <td className='border border-blue-500'>{item.priority}</td>\n                  <td className='border border-blue-500'>{item.status}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <Pagination\n        next={() => {\n          history.push(`${PATH_PROJECT_TYPE}?page=${page + 1}`);\n        }}\n        previous={() => {\n          history.push(`${PATH_PROJECT_TYPE}?page=${page - 1}`);\n        }}\n        page={page}\n        totalPage={totalPage}\n      />\n      </div>\n\n      <div className='w-1/4 h-full bg-blue-800 opacity-75 p-5 px-8 rounded-xl'>\n        <CreateProjectType />\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectType;\n"]},"metadata":{},"sourceType":"module"}